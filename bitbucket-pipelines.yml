# This is an example Starter pipeline configuration
# Use a skeleton to build, test and deploy using manual and parallel steps
# -----
# You can specify a custom docker image from Docker Hub as your build environment.

# image: godotimages/godot:3.3_mono
image: barichello/godot-ci

pipelines:
  pull-requests:
    '**':
      - step:
          name: 'Godot Unit Tests'
          script:
            - godot addons/WAT/cli.tscn run=all --no-window
  branches:
    master:
      - step:
          name: 'Godot Unit Tests'
          script:
            - godot addons/WAT/cli.tscn run=all --no-window

      # The following deployment steps will be executed for each pipeline run. To configure your steps and conditionally deploy see https://support.atlassian.com/bitbucket-cloud/docs/configure-bitbucket-pipelinesyml/
      - step:
          name: 'Generate Release Artifacts'
          script:
            - ./godot-export.sh
          artifacts:
            - .export/**
      - step:
          name: 'Deployment to Staging'
          # image: glassblade/butler
          deployment: staging
          script:
            - ./itch-upload-staging.sh
      - step:
          name: 'Deployment to Production'
          # image: glassblade/butler
          deployment: production
          trigger: 'manual'
          script:
            - ./itch-upload-prod.sh